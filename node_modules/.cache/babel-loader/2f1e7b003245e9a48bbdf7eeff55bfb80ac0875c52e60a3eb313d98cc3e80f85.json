{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samkh\\\\Desktop\\\\SullPort\\\\note-taking-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport NoteList from './components/NoteList';\nimport NoteEditor from './components/NoteEditor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [selectedNote, setSelectedNote] = useState(null);\n  const handleNoteClick = note => {\n    setSelectedNote(note);\n  };\n  const handleNoteSave = note => {\n    if (selectedNote) {\n      setNotes(notes.map(n => n.id === note.id ? note : n));\n    } else {\n      setNotes([...notes, {\n        ...note,\n        id: Date.now()\n      }]);\n    }\n    setSelectedNote(null);\n  };\n  const handleNoteCancel = () => {\n    setSelectedNote(null);\n  };\n  const handleNoteDelete = id => {\n    setNotes(notes.filter(note => note.id !== id));\n    if (selectedNote && selectedNote.id === id) {\n      setSelectedNote(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NoteList, {\n      notes: notes,\n      onNoteClick: handleNoteClick,\n      onDelete: handleNoteDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), selectedNote ? /*#__PURE__*/_jsxDEV(NoteEditor, {\n      note: selectedNote,\n      onSave: handleNoteSave,\n      onCancel: handleNoteCancel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(NoteEditor, {\n      note: {\n        title: '',\n        content: ''\n      },\n      onSave: handleNoteSave,\n      onCancel: handleNoteCancel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0ILVJ5RnNvcJPVHMWpfnw9SDOMw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","NoteList","NoteEditor","jsxDEV","_jsxDEV","App","_s","notes","setNotes","selectedNote","setSelectedNote","handleNoteClick","note","handleNoteSave","map","n","id","Date","now","handleNoteCancel","handleNoteDelete","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","onNoteClick","onDelete","onSave","onCancel","title","content","_c","$RefreshReg$"],"sources":["C:/Users/samkh/Desktop/SullPort/note-taking-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport NoteList from './components/NoteList';\nimport NoteEditor from './components/NoteEditor';\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [selectedNote, setSelectedNote] = useState(null);\n\n  const handleNoteClick = (note) => {\n    setSelectedNote(note);\n  };\n\n  const handleNoteSave = (note) => {\n    if (selectedNote) {\n      setNotes(notes.map((n) => (n.id === note.id ? note : n)));\n    } else {\n      setNotes([...notes, { ...note, id: Date.now() }]);\n    }\n    setSelectedNote(null);\n  };\n\n  const handleNoteCancel = () => {\n    setSelectedNote(null);\n  };\n\n  const handleNoteDelete = (id) => {\n    setNotes(notes.filter((note) => note.id !== id));\n    if (selectedNote && selectedNote.id === id) {\n      setSelectedNote(null);\n    }\n  };\n\n  return (\n    <div>\n      <h1>My Notes</h1>\n      <NoteList notes={notes} onNoteClick={handleNoteClick} onDelete={handleNoteDelete} />\n      {selectedNote ? (\n        <NoteEditor note={selectedNote} onSave={handleNoteSave} onCancel={handleNoteCancel} />\n      ) : (\n        <NoteEditor note={{ title: '', content: '' }} onSave={handleNoteSave} onCancel={handleNoteCancel} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMW,eAAe,GAAIC,IAAI,IAAK;IAChCF,eAAe,CAACE,IAAI,CAAC;EACvB,CAAC;EAED,MAAMC,cAAc,GAAID,IAAI,IAAK;IAC/B,IAAIH,YAAY,EAAE;MAChBD,QAAQ,CAACD,KAAK,CAACO,GAAG,CAAEC,CAAC,IAAMA,CAAC,CAACC,EAAE,KAAKJ,IAAI,CAACI,EAAE,GAAGJ,IAAI,GAAGG,CAAE,CAAC,CAAC;IAC3D,CAAC,MAAM;MACLP,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;QAAE,GAAGK,IAAI;QAAEI,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC;MAAE,CAAC,CAAC,CAAC;IACnD;IACAR,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAMS,gBAAgB,GAAGA,CAAA,KAAM;IAC7BT,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAMU,gBAAgB,GAAIJ,EAAE,IAAK;IAC/BR,QAAQ,CAACD,KAAK,CAACc,MAAM,CAAET,IAAI,IAAKA,IAAI,CAACI,EAAE,KAAKA,EAAE,CAAC,CAAC;IAChD,IAAIP,YAAY,IAAIA,YAAY,CAACO,EAAE,KAAKA,EAAE,EAAE;MAC1CN,eAAe,CAAC,IAAI,CAAC;IACvB;EACF,CAAC;EAED,oBACEN,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBtB,OAAA,CAACH,QAAQ;MAACM,KAAK,EAAEA,KAAM;MAACoB,WAAW,EAAEhB,eAAgB;MAACiB,QAAQ,EAAER;IAAiB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACnFjB,YAAY,gBACXL,OAAA,CAACF,UAAU;MAACU,IAAI,EAAEH,YAAa;MAACoB,MAAM,EAAEhB,cAAe;MAACiB,QAAQ,EAAEX;IAAiB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEtFtB,OAAA,CAACF,UAAU;MAACU,IAAI,EAAE;QAAEmB,KAAK,EAAE,EAAE;QAAEC,OAAO,EAAE;MAAG,CAAE;MAACH,MAAM,EAAEhB,cAAe;MAACiB,QAAQ,EAAEX;IAAiB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACpG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACpB,EAAA,CAvCQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}